// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.FSharp.Core;
using System.Collections.Generic;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;

namespace WorldConquest.PexTests
{
  public partial class GameStateUpdateTestsGenerated {
[TestMethod]
[PexGeneratedBy(typeof(GameStateUpdateTests))]
[PexRaisedException(typeof(NullReferenceException))]
public void TestCaptureThrowsNullReferenceException622()
{
    Tuple<global::HexTiling.HexCoords, 
          global::Resource.Resource, FSharpOption<global::GameState.PlayerId>>[] tuples
       = new Tuple<global::HexTiling.HexCoords, 
                   global::Resource.Resource, FSharpOption<global::GameState.PlayerId>>[0];
    Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId>[] tuples1_
       = new Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId>[0];
    ((GameStateUpdateTests)this).TestCapture
        ((global::Terrain.Terrain[,])null, (global::Units.UnitInfo[][])null, 
         tuples, tuples1_);
}
[TestMethod]
[PexGeneratedBy(typeof(GameStateUpdateTests))]
[PexRaisedException(typeof(NullReferenceException))]
public void TestCaptureThrowsNullReferenceException848()
{
    Tuple<global::HexTiling.HexCoords, 
          global::Resource.Resource, FSharpOption<global::GameState.PlayerId>> tuple;
    Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId> tuple1_;
    tuple = new Tuple<global::HexTiling.HexCoords, 
                      global::Resource.Resource, FSharpOption<global::GameState.PlayerId>>
                ((global::HexTiling.HexCoords)null, (global::Resource.Resource)null, 
                                                    (FSharpOption<global::GameState.PlayerId>)null);
    tuple1_ = new Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId>
                  ((global::HexTiling.HexCoords)null, (global::GameState.PlayerId)null);
    Tuple<global::HexTiling.HexCoords, 
          global::Resource.Resource, FSharpOption<global::GameState.PlayerId>>[] tuples
       = new Tuple<global::HexTiling.HexCoords, 
                   global::Resource.Resource, FSharpOption<global::GameState.PlayerId>>[1];
    Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId>[] tuples1_
       = new Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId>[2];
    tuples[0] = tuple;
    tuples1_[0] = tuple1_;
    tuples1_[1] = tuple1_;
    ((GameStateUpdateTests)this).TestCapture
        ((global::Terrain.Terrain[,])null, (global::Units.UnitInfo[][])null, 
         tuples, tuples1_);
}
[TestMethod]
[PexGeneratedBy(typeof(GameStateUpdateTests))]
[PexRaisedException(typeof(NullReferenceException))]
public void TestCaptureThrowsNullReferenceException658()
{
    Tuple<global::HexTiling.HexCoords, 
          global::Resource.Resource, FSharpOption<global::GameState.PlayerId>> tuple;
    Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId> tuple1_;
    tuple = new Tuple<global::HexTiling.HexCoords, 
                      global::Resource.Resource, FSharpOption<global::GameState.PlayerId>>
                ((global::HexTiling.HexCoords)null, (global::Resource.Resource)null, 
                                                    (FSharpOption<global::GameState.PlayerId>)null);
    tuple1_ = new Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId>
                  ((global::HexTiling.HexCoords)null, (global::GameState.PlayerId)null);
    Tuple<global::HexTiling.HexCoords, 
          global::Resource.Resource, FSharpOption<global::GameState.PlayerId>>[] tuples
       = new Tuple<global::HexTiling.HexCoords, 
                   global::Resource.Resource, FSharpOption<global::GameState.PlayerId>>[2];
    Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId>[] tuples1_
       = new Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId>[2];
    tuples[0] = tuple;
    tuples[1] = tuple;
    tuples1_[0] = tuple1_;
    tuples1_[1] = tuple1_;
    ((GameStateUpdateTests)this).TestCapture
        ((global::Terrain.Terrain[,])null, (global::Units.UnitInfo[][])null, 
         tuples, tuples1_);
}
[TestMethod]
[PexGeneratedBy(typeof(GameStateUpdateTests))]
[PexRaisedException(typeof(NullReferenceException))]
public void TestCaptureThrowsNullReferenceException58()
{
    Tuple<global::HexTiling.HexCoords, 
          global::Resource.Resource, FSharpOption<global::GameState.PlayerId>> tuple;
    Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId> tuple1_;
    tuple = new Tuple<global::HexTiling.HexCoords, 
                      global::Resource.Resource, FSharpOption<global::GameState.PlayerId>>
                ((global::HexTiling.HexCoords)null, (global::Resource.Resource)null, 
                                                    (FSharpOption<global::GameState.PlayerId>)null);
    tuple1_ = new Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId>
                  ((global::HexTiling.HexCoords)null, (global::GameState.PlayerId)null);
    Tuple<global::HexTiling.HexCoords, 
          global::Resource.Resource, FSharpOption<global::GameState.PlayerId>>[] tuples
       = new Tuple<global::HexTiling.HexCoords, 
                   global::Resource.Resource, FSharpOption<global::GameState.PlayerId>>[4];
    Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId>[] tuples1_
       = new Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId>[4];
    tuples[0] = tuple;
    tuples[1] = tuple;
    tuples[2] = tuple;
    tuples[3] = tuple;
    tuples1_[0] = tuple1_;
    tuples1_[1] = tuple1_;
    tuples1_[2] = tuple1_;
    tuples1_[3] = tuple1_;
    ((GameStateUpdateTests)this).TestCapture
        ((global::Terrain.Terrain[,])null, (global::Units.UnitInfo[][])null, 
         tuples, tuples1_);
}
[TestMethod]
[PexGeneratedBy(typeof(GameStateUpdateTests))]
[PexRaisedException(typeof(NullReferenceException))]
public void TestCaptureThrowsNullReferenceException559()
{
    Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId> tuple;
    tuple = new Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId>
                ((global::HexTiling.HexCoords)null, (global::GameState.PlayerId)null);
    global::Units.UnitInfo[][] unitInfoss = new global::Units.UnitInfo[0][];
    Tuple<global::HexTiling.HexCoords, 
          global::Resource.Resource, FSharpOption<global::GameState.PlayerId>>[] tuples
       = new Tuple<global::HexTiling.HexCoords, 
                   global::Resource.Resource, FSharpOption<global::GameState.PlayerId>>[0];
    Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId>[] tuples1_
       = new Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId>[10];
    tuples1_[0] = tuple;
    tuples1_[1] = tuple;
    tuples1_[2] = tuple;
    tuples1_[3] = tuple;
    tuples1_[4] = tuple;
    tuples1_[5] = tuple;
    tuples1_[6] = tuple;
    tuples1_[7] = tuple;
    tuples1_[8] = tuple;
    tuples1_[9] = tuple;
    ((GameStateUpdateTests)this).TestCapture
        ((global::Terrain.Terrain[,])null, unitInfoss, tuples, tuples1_);
}
[TestMethod]
[PexGeneratedBy(typeof(GameStateUpdateTests))]
[PexRaisedException(typeof(NullReferenceException))]
public void TestCaptureThrowsNullReferenceException622()
{
    Tuple<global::HexTiling.HexCoords, 
          global::Resource.Resource, FSharpOption<global::GameState.PlayerId>>[] tuples
       = new Tuple<global::HexTiling.HexCoords, 
                   global::Resource.Resource, FSharpOption<global::GameState.PlayerId>>[0];
    Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId>[] tuples1_
       = new Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId>[0];
    ((GameStateUpdateTests)this).TestCapture
        ((global::Terrain.Terrain[,])null, (global::Units.UnitInfo[][])null, 
         tuples, tuples1_);
}
[TestMethod]
[PexGeneratedBy(typeof(GameStateUpdateTests))]
[PexRaisedException(typeof(NullReferenceException))]
public void TestCaptureThrowsNullReferenceException848()
{
    Tuple<global::HexTiling.HexCoords, 
          global::Resource.Resource, FSharpOption<global::GameState.PlayerId>> tuple;
    Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId> tuple1_;
    tuple = new Tuple<global::HexTiling.HexCoords, 
                      global::Resource.Resource, FSharpOption<global::GameState.PlayerId>>
                ((global::HexTiling.HexCoords)null, (global::Resource.Resource)null, 
                                                    (FSharpOption<global::GameState.PlayerId>)null);
    tuple1_ = new Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId>
                  ((global::HexTiling.HexCoords)null, (global::GameState.PlayerId)null);
    Tuple<global::HexTiling.HexCoords, 
          global::Resource.Resource, FSharpOption<global::GameState.PlayerId>>[] tuples
       = new Tuple<global::HexTiling.HexCoords, 
                   global::Resource.Resource, FSharpOption<global::GameState.PlayerId>>[1];
    Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId>[] tuples1_
       = new Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId>[2];
    tuples[0] = tuple;
    tuples1_[0] = tuple1_;
    tuples1_[1] = tuple1_;
    ((GameStateUpdateTests)this).TestCapture
        ((global::Terrain.Terrain[,])null, (global::Units.UnitInfo[][])null, 
         tuples, tuples1_);
}
[TestMethod]
[PexGeneratedBy(typeof(GameStateUpdateTests))]
[PexRaisedException(typeof(NullReferenceException))]
public void TestCaptureThrowsNullReferenceException658()
{
    Tuple<global::HexTiling.HexCoords, 
          global::Resource.Resource, FSharpOption<global::GameState.PlayerId>> tuple;
    Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId> tuple1_;
    tuple = new Tuple<global::HexTiling.HexCoords, 
                      global::Resource.Resource, FSharpOption<global::GameState.PlayerId>>
                ((global::HexTiling.HexCoords)null, (global::Resource.Resource)null, 
                                                    (FSharpOption<global::GameState.PlayerId>)null);
    tuple1_ = new Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId>
                  ((global::HexTiling.HexCoords)null, (global::GameState.PlayerId)null);
    Tuple<global::HexTiling.HexCoords, 
          global::Resource.Resource, FSharpOption<global::GameState.PlayerId>>[] tuples
       = new Tuple<global::HexTiling.HexCoords, 
                   global::Resource.Resource, FSharpOption<global::GameState.PlayerId>>[2];
    Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId>[] tuples1_
       = new Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId>[2];
    tuples[0] = tuple;
    tuples[1] = tuple;
    tuples1_[0] = tuple1_;
    tuples1_[1] = tuple1_;
    ((GameStateUpdateTests)this).TestCapture
        ((global::Terrain.Terrain[,])null, (global::Units.UnitInfo[][])null, 
         tuples, tuples1_);
}
[TestMethod]
[PexGeneratedBy(typeof(GameStateUpdateTests))]
[PexRaisedException(typeof(NullReferenceException))]
public void TestCaptureThrowsNullReferenceException58()
{
    Tuple<global::HexTiling.HexCoords, 
          global::Resource.Resource, FSharpOption<global::GameState.PlayerId>> tuple;
    Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId> tuple1_;
    tuple = new Tuple<global::HexTiling.HexCoords, 
                      global::Resource.Resource, FSharpOption<global::GameState.PlayerId>>
                ((global::HexTiling.HexCoords)null, (global::Resource.Resource)null, 
                                                    (FSharpOption<global::GameState.PlayerId>)null);
    tuple1_ = new Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId>
                  ((global::HexTiling.HexCoords)null, (global::GameState.PlayerId)null);
    Tuple<global::HexTiling.HexCoords, 
          global::Resource.Resource, FSharpOption<global::GameState.PlayerId>>[] tuples
       = new Tuple<global::HexTiling.HexCoords, 
                   global::Resource.Resource, FSharpOption<global::GameState.PlayerId>>[4];
    Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId>[] tuples1_
       = new Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId>[4];
    tuples[0] = tuple;
    tuples[1] = tuple;
    tuples[2] = tuple;
    tuples[3] = tuple;
    tuples1_[0] = tuple1_;
    tuples1_[1] = tuple1_;
    tuples1_[2] = tuple1_;
    tuples1_[3] = tuple1_;
    ((GameStateUpdateTests)this).TestCapture
        ((global::Terrain.Terrain[,])null, (global::Units.UnitInfo[][])null, 
         tuples, tuples1_);
}
[TestMethod]
[PexGeneratedBy(typeof(GameStateUpdateTests))]
[PexRaisedException(typeof(NullReferenceException))]
public void TestCaptureThrowsNullReferenceException559()
{
    Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId> tuple;
    tuple = new Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId>
                ((global::HexTiling.HexCoords)null, (global::GameState.PlayerId)null);
    global::Units.UnitInfo[][] unitInfoss = new global::Units.UnitInfo[0][];
    Tuple<global::HexTiling.HexCoords, 
          global::Resource.Resource, FSharpOption<global::GameState.PlayerId>>[] tuples
       = new Tuple<global::HexTiling.HexCoords, 
                   global::Resource.Resource, FSharpOption<global::GameState.PlayerId>>[0];
    Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId>[] tuples1_
       = new Tuple<global::HexTiling.HexCoords, global::GameState.PlayerId>[10];
    tuples1_[0] = tuple;
    tuples1_[1] = tuple;
    tuples1_[2] = tuple;
    tuples1_[3] = tuple;
    tuples1_[4] = tuple;
    tuples1_[5] = tuple;
    tuples1_[6] = tuple;
    tuples1_[7] = tuple;
    tuples1_[8] = tuple;
    tuples1_[9] = tuple;
    ((GameStateUpdateTests)this).TestCapture
        ((global::Terrain.Terrain[,])null, unitInfoss, tuples, tuples1_);
}
  }
}
